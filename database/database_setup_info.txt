Es folgt eine Zusammenfassung der notwendigen Schritte, um die Datenbanken
für das System aufzusetzen und die Verbindung der Applikation mit den
Datenbanken zu konfigurieren.

1. Datenbanken erstellen
In der Command-Line mithilfe von 'mysql -u [username*] -p' die MySQL-Session starten.
Zunächst muss das Passwort eingegeben werden*.
Anschließend werden die Datenbanken mit den folgenden Befehlen erstellt:
'create database inter_act_backend;'
'create database inter_act_backend_test;'
Datenbanken anzeigen: 'show databases;'

2. Verbindung zur Applikation einrichten
Anschließend wird die Datei '.env' mit den Datenbank-Informationen befüllt.
Diese können von Benutzer zu Benutzer variieren, können jedoch z.B. wie folgt ausehen:
DB_CONNECTION=mysql
DB_HOST=127.0.0.1
DB_PORT=3306
DB_DATABASE=inter_act_backend
DB_USERNAME=*
DB_PASSWORD=*

3. Datenbank-Tabellen erstellen
Zum Einrichten der Datenbankstruktur muss lediglich in der Command-Line vom Projekt-Ordner
ausgehend der Befehl 'php artisan migrate' eingegeben werden, um die Mirgrationen durchzuführen.
Voraussetzung ist, dass man bereits die Version des Projekts mit den erstellten Migrationen besitzt.
Alle Tabellen löschen und alle Migrationen neu ausführen: 'php artisan migrate:fresh'

4. Datenbank-Tabellen befüllen
Durch Seeder wird die Datenbank mit Testdaten befüllt:
Ausführen der Datenbank-Seeder: 'php artisan db:seed'
Datenbank neu migrieren und Seeder: 'php artisan migrate:refresh --seed'

5. Test-Umgebung einrichten (lt. Buch "Laravel Up & Running")
Erstellen der Datei ".env.test" mit den benötigten Umgebungsvariablen (ähnlich wie ".env")
In der Datei "tests/TestCase.php" fügt man in die Methode "createApplication()" des Traits folgendes unter der
Zeile mit "$app = require(...)" ein:
if(file_exists(dirname(__DIR__) . '/.env.test')){
    (new \Dotenv\Dotenv(dirname(__DIR__), '.env.test'))->load();
}

* = Benutzer und Password wurden den berechtigten Personen bereits mitgeteilt